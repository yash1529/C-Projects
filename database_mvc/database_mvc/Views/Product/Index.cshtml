@using database_mvc.Models;
@{
    ViewData["Title"] = "Index";
}
@{
    IEnumerable<Product> prod = ViewData["Products"] as IEnumerable<Product>;
    IEnumerable<ProductCat> prodcat = ViewData["CatProduct"] as IEnumerable<ProductCat>;

}


<h1>List Of Products</h1>
<p>
    <a asp-action="Create">ADD NEW PRODUCT</a>
</p>

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <style type="text/css">
        body {
            font-family: Arial;
            font-size: 10pt;
        }

        .Grid {
            border: 1px solid #ccc;
            border-collapse: collapse;
            background-color: #fff;
        }

            .Grid th {
                background-color: #B8DBFD;
                color: #333;
                font-weight: bold;
            }

            .Grid th, .Grid td {
                padding: 5px;
                border: 1px solid #ccc;
            }

            .Grid img {
                cursor: pointer;
            }

        .ChildGrid {
            width: 100%;
        }

            .ChildGrid th {
                background-color: #6C6C6C;
                color: #fff;
                font-weight: bold;
            }
    </style>
</head>
<body>
    <table cellpadding="0" cellspacing="0" class="Grid">
        <tr>
            <th></th>
            <th>Product Category</th>
            <th>ID</th>
        </tr>
        @foreach (ProductCat procat in prodcat)
        {
    <tr>
        <td>
            <img src="~/Images/plus.png" />
            <div style="display:none">
                <table cellpadding="0" cellspacing="0" class="ChildGrid">
                    <tr>
                        <th>Product Id</th>
                        <th>Product Name</th>
                        <th> Color</th>
                        <th>Price</th>
                        <th> No of Items :@prod.ToList().Where(item => item.Pcategory == procat.Id).Count()</th>
                    </tr>
                    @foreach (Product item in prod)
                    {
                        @if (procat.Id == item.Pcategory)
                        {
                            <tr>
                                <td>@item.PId</td>
                                <td>@item.Pname</td>
                                <td>@item.PColor</td>
                                <td>@item.Pprice</td>
                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.PId">Edit</a> ||
                                    <a asp-action="Delete" asp-route-id="@item.PId">Delete</a>
                                </td>
                            </tr>
                        }
                    }
                </table>
            </div>
        </td>
        <td>@procat.Pname @*@Html.ActionLink("Delete Category", "DeleteCategory",new { id = @procat.Id})*@ </td>
        
        <td>@procat.Id</td>
    </tr>
        }
    </table>
    <br>
    <br>
    <div>
        @Html.ActionLink("Log Out", "Login")@*Redirect to Login Interface*@
    </div>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript">
        //Assign Click event to Plus Image.
        $("body").on("click", "img[src*='plus.png']", function () {
            $(this).closest("tr").after("<tr><td></td><td colspan = '999'>" + $(this).next().html() + "</td></tr>");
            $(this).attr("src", "/images/minus.png");
        });
        //Assign Click event to Minus Image.
        $("body").on("click", "img[src*='minus.png']", function () {
            $(this).attr("src", "/images/plus.png");
            $(this).closest("tr").next().remove();
        });
    </script>
</body>
</html>




